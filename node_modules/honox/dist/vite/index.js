import path from "path";
import devServer, { defaultOptions as devServerDefaultOptions } from "@hono/vite-dev-server";
import { injectImportingIslands } from "./inject-importing-islands.js";
import { islandComponents } from "./island-components.js";
import { restartOnAddUnlink } from "./restart-on-add-unlink.js";
import client from "./client.js";
const defaultOptions = {
  islands: true,
  entry: path.join(process.cwd(), "./app/server.ts")
};
function honox(options) {
  const plugins = [];
  const entry = options?.entry ?? defaultOptions.entry;
  plugins.push(
    devServer({
      entry,
      exclude: [
        ...devServerDefaultOptions.exclude,
        /^\/app\/.+/,
        /^\/favicon.ico/,
        /^\/static\/.+/
      ],
      ...options?.devServer
    })
  );
  if (options?.islands !== false) {
    plugins.push(islandComponents(options?.islandComponents));
  }
  plugins.push(injectImportingIslands());
  plugins.push(restartOnAddUnlink());
  plugins.push(client(options?.client));
  return [
    {
      name: "honox-vite-config",
      config: () => {
        return {
          ssr: {
            noExternal: true
          }
        };
      }
    },
    ...plugins
  ];
}
var vite_default = honox;
export {
  vite_default as default,
  defaultOptions,
  devServerDefaultOptions,
  islandComponents
};
